"""
pythoneda/sandbox/artifact/application/sandbox_artifact_app.py

This file defines the SandboxArtifactApp class.

Copyright (C) 2023-today rydnr's pythoneda-sandbox/python-artifact-application

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
import asyncio
from pythoneda.application import PythonEDA


class NixFlakeToGraphviz(PythonEDA):
    """
    Runs the NixFlakeToGraphviz PythonEDA app.

    Class name: NixFlakeToGraphviz

    Responsibilities:
        - Runs the Dot application.

    Collaborators:
        - Command-line handlers from rydnr.nix.flake.graphviz.infrastructure.cli
    """

    def __init__(self):
        """
        Creates a new NixFlakeToGraphviz instance.
        """
        # nix_flake_to_graphviz_banner is automatically generated by rydnr/nix-flake-to-graphviz/nix flake.
        banner = None
        try:
            from rydnr.nix.flake.graphviz.application.nix_flake_to_graphviz_banner import (
                NixFlakeToGraphvizBanner,
            )

            banner = NixFlakeToGraphvizBanner()
        except ImportError:
            pass
        super().__init__(banner, __file__)


if __name__ == "__main__":
    asyncio.run(
        NixFlakeToGraphviz.main(
            "rydnr.nix.flake.graphviz.application.NixFlakeToGraphviz"
        )
    )
